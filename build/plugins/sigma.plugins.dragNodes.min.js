module.exports=function(a){"use strict";function b(b,c){function d(a){var b=window.getComputedStyle(a),c=function(a){return parseInt(b.getPropertyValue(a).replace("px",""))||0};return{left:a.getBoundingClientRect().left+c("padding-left"),top:a.getBoundingClientRect().top+c("padding-top")}}function e(a){u=!1,m.removeEventListener("mousemove",j),m.removeEventListener("mouseup",i),s.length||(q=null)}function f(a){t[a.data.node.id]||(s.push(a.data.node),t[a.data.node.id]=!0,s.length&&!u&&(q=s[s.length-1],o.addEventListener("mousedown",h)))}function g(a){var b=s.map(function(a){return a}).indexOf(a.data.node);s.splice(b,1),delete t[a.data.node.id],s.length&&!u?q=s[s.length-1]:o.removeEventListener("mousedown",h)}function h(a){u=!0;var b=l.graph.nodes().length;if(q&&b>1){o.removeEventListener("mousedown",h),m.addEventListener("mousemove",j),m.addEventListener("mouseup",i);var c,d;for(c in l.cameras)d=l.cameras[c],void 0!==d.edgequadtree&&(d.edgequadtree._enabled=!1);n.settings({mouseEnabled:!1,enableHovering:!1}),l.refresh(),k.dispatchEvent("startdrag",{node:q,captor:a,renderer:n})}}function i(a){u=!1,o.addEventListener("mousedown",h),m.removeEventListener("mousemove",j),m.removeEventListener("mouseup",i);var b,c;for(b in l.cameras)c=l.cameras[b],void 0!==c.edgequadtree&&(c.edgequadtree._enabled=!0);n.settings({mouseEnabled:!0,enableHovering:!0}),l.refresh(),v&&k.dispatchEvent("drop",{node:q,captor:a,renderer:n}),k.dispatchEvent("dragend",{node:q,captor:a,renderer:n}),v=!1,q=null}function j(a){function b(){for(var b=d(n.container),c=a.clientX-b.left,e=a.clientY-b.top,f=Math.cos(p.angle),g=Math.sin(p.angle),h=l.graph.nodes(),i=[],j=0;j<2;j++){var m=h[j],o={x:m.x*f+m.y*g,y:m.y*f-m.x*g,renX:m[r+"x"],renY:m[r+"y"]};i.push(o)}if(i[0].x===i[1].x&&i[0].y===i[1].y){var s=0===i[0].renX?1:i[0].renX,t=0===i[0].renY?1:i[0].renY;c=i[0].x/s*(c-i[0].renX)+i[0].x,e=i[0].y/t*(e-i[0].renY)+i[0].y}else{var s=(i[1].renX-i[0].renX)/(i[1].x-i[0].x),t=(i[1].renY-i[0].renY)/(i[1].y-i[0].y);i[1].x===i[0].x&&(s=t),i[1].y===i[0].y&&(t=s),c=(c-i[0].renX)/s+i[0].x,e=(e-i[0].renY)/t+i[0].y}q.x=c*f-e*g,q.y=e*f+c*g,l.refresh(),v=!0,k.dispatchEvent("drag",{node:q,captor:a,renderer:n})}if(navigator.userAgent.toLowerCase().indexOf("firefox")>-1){clearTimeout(c);var c=setTimeout(b,0)}else b()}a.classes.dispatcher.extend(this);var k=this,l=b,m=document.body,n=c,o=c.container.lastChild,p=c.camera,q=null,r="",s=[],t={},u=!1,v=!1;c instanceof a.renderers.svg&&(o=c.container.firstChild),r=c instanceof a.renderers.webgl?c.options.prefix.substr(5):c.options.prefix,c.bind("overNode",f),c.bind("outNode",g),c.bind("click",e),l.bind("kill",function(){k.unbindAll()}),this.unbindAll=function(){o.removeEventListener("mousedown",h),m.removeEventListener("mousemove",j),m.removeEventListener("mouseup",i),n.unbind("overNode",f),n.unbind("outNode",g)}}if("undefined"==typeof a)throw"sigma is not declared";a.utils.pkg("sigma.plugins");var c={};a.plugins.dragNodes=function(d,e){return c[d.id]||(c[d.id]=new b(d,e)),d.bind("kill",function(){a.plugins.killDragNodes(d)}),c[d.id]},a.plugins.killDragNodes=function(a){c[a.id]instanceof b&&(c[a.id].unbindAll(),delete c[a.id])}};